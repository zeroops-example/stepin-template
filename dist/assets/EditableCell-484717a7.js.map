{"version":3,"file":"EditableCell-484717a7.js","sources":["../../src/components/editable-cell/EditableCell.vue"],"sourcesContent":["<script lang=\"ts\" setup>\n  import { computed, nextTick, PropType, ref, toRefs } from 'vue';\n\n  export type AntInputType =\n    | 'input'\n    | 'textarea'\n    | 'radio'\n    | 'timePicker'\n    | 'datePicker'\n    | 'rangePicker'\n    | 'select'\n    | 'mention'\n    | 'rate'\n    | 'upload'\n    | 'treeSelect'\n    | 'transfer'\n    | 'checkbox'\n    | 'cascader'\n    | 'autoComplete'\n    | 'inputNumber'\n    | 'slider'\n    | 'switch';\n\n  const emit = defineEmits<{\n    (e: 'update:edit', edit: boolean): void;\n    (e: 'update:value', value: any): void;\n    (e: 'pressEnter', event: KeyboardEvent): void;\n  }>();\n  const props = defineProps({\n    value: [String, Number, Boolean, Object],\n    edit: {\n      type: Boolean,\n      default: null,\n    },\n    editOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    type: {\n      type: String as PropType<AntInputType>,\n      default: 'input',\n      validator(val: string) {\n        return [\n          'input',\n          'radio',\n          'timePicker',\n          'datePicker',\n          'rangePicker',\n          'select',\n          'mention',\n          'rate',\n          'upload',\n          'treeSelect',\n          'transfer',\n          'checkbox',\n          'cascader',\n          'autoComplete',\n          'inputNumber',\n          'slider',\n          'switch',\n          'textarea',\n        ].includes(val);\n      },\n    },\n    options: Object,\n  });\n\n  const { type } = toRefs(props);\n\n  const component = computed(() => {\n    const _type = type.value;\n    return 'A' + _type.substring(0, 1).toUpperCase() + _type.substring(1);\n  });\n\n  const cacheEdit = ref(false);\n\n  const _edit = computed({\n    get() {\n      if (props.edit !== null) {\n        cacheEdit.value = props.edit;\n      }\n      return props.edit ?? cacheEdit.value;\n    },\n    set(val) {\n      cacheEdit.value = val;\n      emit('update:edit', val);\n    },\n  });\n\n  const input = ref();\n\n  function editCell() {\n    if (props.editOnClick) {\n      _edit.value = true;\n      nextTick(() => input.value?.focus());\n    }\n  }\n\n  function complete() {\n    _edit.value = false;\n  }\n\n  const cacheVal: any = ref(null);\n  const _value = computed({\n    get() {\n      if (props.value !== undefined) {\n        cacheVal.value = props.value;\n      }\n      return props.value ?? cacheVal.value;\n    },\n    set(val) {\n      cacheVal.value = val;\n      emit('update:value', val);\n    },\n  });\n</script>\n<template>\n  <slot v-if=\"_edit\" class=\"editable-cell-input\" name=\"input\">\n    <component\n      ref=\"input\"\n      @keyup.enter=\"complete\"\n      @blur=\"complete\"\n      v-model:value=\"_value\"\n      class=\"editable-cell-input-component\"\n      v-bind=\"options\"\n      :is=\"component\"\n    />\n  </slot>\n  <div v-else @click=\"editCell\" class=\"editable-cell-show\">\n    <slot>\n      {{ value }}\n    </slot>\n  </div>\n</template>\n<style lang=\"less\" scoped>\n  .editable-cell {\n    &-input {\n      &-component {\n      }\n    }\n  }\n</style>\n"],"names":["type","toRefs","props","component","computed","_type","cacheEdit","ref","_edit","val","emit","input","editCell","nextTick","_a","complete","cacheVal","_value"],"mappings":"wpBAmEE,CAAA,KAAAA,CAAA,EAAAC,EAAAC,CAAA,EAEAC,EAAAC,EAAA,IAAA,CACE,MAAAC,EAAAL,EAAA,MACA,MAAA,IAAAK,EAAA,UAAA,EAAA,CAAA,EAAA,cAAAA,EAAA,UAAA,CAAA,CAAoE,CAAA,EAGtEC,EAAAC,EAAA,EAAA,EAEAC,EAAAJ,EAAA,CAAuB,KAAA,CAEnB,OAAAF,EAAA,OAAA,OACEI,EAAA,MAAAJ,EAAA,MAEFA,EAAA,MAAAI,EAAA,KAA+B,EACjC,IAAAG,EAAA,CAEEH,EAAA,MAAAG,EACAC,EAAA,cAAAD,CAAA,CAAuB,CACzB,CAAA,EAGFE,EAAAJ,IAEA,SAAAK,GAAA,CACEV,EAAA,cACEM,EAAA,MAAA,GACAK,EAAA,IAAA,OAAA,OAAAC,EAAAH,EAAA,QAAA,YAAAG,EAAA,QAAA,EACF,CAGF,SAAAC,GAAA,CACEP,EAAA,MAAA,EAAc,CAGhB,MAAAQ,EAAAT,EAAA,IAAA,EACAU,EAAAb,EAAA,CAAwB,KAAA,CAEpB,OAAAF,EAAA,QAAA,SACEc,EAAA,MAAAd,EAAA,OAEFA,EAAA,OAAAc,EAAA,KAA+B,EACjC,IAAAP,EAAA,CAEEO,EAAA,MAAAP,EACAC,EAAA,eAAAD,CAAA,CAAwB,CAC1B,CAAA"}