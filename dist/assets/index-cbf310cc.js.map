{"version":3,"file":"index-cbf310cc.js","sources":["../../node_modules/lodash-es/padStart.js","../../node_modules/ant-design-vue/es/statistic/utils.js","../../node_modules/ant-design-vue/es/statistic/Countdown.js","../../node_modules/ant-design-vue/es/statistic/index.js"],"sourcesContent":["import createPadding from './_createPadding.js';\nimport stringSize from './_stringSize.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Pads `string` on the left side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padStart('abc', 6);\n * // => '   abc'\n *\n * _.padStart('abc', 6, '_-');\n * // => '_-_abc'\n *\n * _.padStart('abc', 3);\n * // => 'abc'\n */\nfunction padStart(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (createPadding(length - strLength, chars) + string)\n    : string;\n}\n\nexport default padStart;\n","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport padStart from 'lodash-es/padStart';\n// Countdown\nvar timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365], ['M', 1000 * 60 * 60 * 24 * 30], ['D', 1000 * 60 * 60 * 24], ['H', 1000 * 60 * 60], ['m', 1000 * 60], ['s', 1000], ['S', 1] // million seconds\n];\n\nexport function formatTimeStr(duration, format) {\n  var leftDuration = duration;\n  var escapeRegex = /\\[[^\\]]*]/g;\n  var keepList = (format.match(escapeRegex) || []).map(function (str) {\n    return str.slice(1, -1);\n  });\n  var templateText = format.replace(escapeRegex, '[]');\n  var replacedText = timeUnits.reduce(function (current, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      unit = _ref2[1];\n    if (current.indexOf(name) !== -1) {\n      var value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(\"\".concat(name, \"+\"), 'g'), function (match) {\n        var len = match.length;\n        return padStart(value.toString(), len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  var index = 0;\n  return replacedText.replace(escapeRegex, function () {\n    var match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nexport function formatCountdown(value, config) {\n  var _config$format = config.format,\n    format = _config$format === void 0 ? '' : _config$format;\n  var target = new Date(value).getTime();\n  var current = Date.now();\n  var diff = Math.max(target - current, 0);\n  return formatTimeStr(diff, format);\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport { defineComponent, onBeforeUnmount, onMounted, onUpdated, ref } from 'vue';\nimport omit from '../_util/omit';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport Statistic, { statisticProps } from './Statistic';\nimport { formatCountdown as formatCD } from './utils';\nvar REFRESH_INTERVAL = 1000 / 30;\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\nexport var countdownProps = function countdownProps() {\n  return _objectSpread(_objectSpread({}, statisticProps()), {}, {\n    value: [Number, String, Object],\n    format: String,\n    onFinish: Function,\n    onChange: Function\n  });\n};\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'AStatisticCountdown',\n  props: initDefaultProps(countdownProps(), {\n    format: 'HH:mm:ss'\n  }),\n  // emits: ['finish', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var countdownId = ref();\n    var statistic = ref();\n    var syncTimer = function syncTimer() {\n      var value = props.value;\n      var timestamp = getTime(value);\n      if (timestamp >= Date.now()) {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n    var startTimer = function startTimer() {\n      if (countdownId.value) return;\n      var timestamp = getTime(props.value);\n      countdownId.value = setInterval(function () {\n        statistic.value.$forceUpdate();\n        if (timestamp > Date.now()) {\n          emit('change', timestamp - Date.now());\n        }\n        syncTimer();\n      }, REFRESH_INTERVAL);\n    };\n    var stopTimer = function stopTimer() {\n      var value = props.value;\n      if (countdownId.value) {\n        clearInterval(countdownId.value);\n        countdownId.value = undefined;\n        var timestamp = getTime(value);\n        if (timestamp < Date.now()) {\n          emit('finish');\n        }\n      }\n    };\n    var formatCountdown = function formatCountdown(_ref2) {\n      var value = _ref2.value,\n        config = _ref2.config;\n      var format = props.format;\n      return formatCD(value, _objectSpread(_objectSpread({}, config), {}, {\n        format: format\n      }));\n    };\n    var valueRenderHtml = function valueRenderHtml(node) {\n      return node;\n    };\n    onMounted(function () {\n      syncTimer();\n    });\n    onUpdated(function () {\n      syncTimer();\n    });\n    onBeforeUnmount(function () {\n      stopTimer();\n    });\n    return function () {\n      var value = props.value;\n      return _createVNode(Statistic, _objectSpread({\n        \"ref\": statistic\n      }, _objectSpread(_objectSpread({}, omit(props, ['onFinish', 'onChange'])), {}, {\n        value: value,\n        valueRender: valueRenderHtml,\n        formatter: formatCountdown\n      })), slots);\n    };\n  }\n});","import Statistic from './Statistic';\nimport Countdown from './Countdown';\nStatistic.Countdown = Countdown;\n/* istanbul ignore next */\nStatistic.install = function (app) {\n  app.component(Statistic.name, Statistic);\n  app.component(Statistic.Countdown.name, Statistic.Countdown);\n  return app;\n};\nexport var StatisticCountdown = Statistic.Countdown;\nexport default Statistic;"],"names":["padStart","string","length","chars","toString","toInteger","strLength","stringSize","createPadding","timeUnits","formatTimeStr","duration","format","leftDuration","escapeRegex","keepList","str","templateText","replacedText","current","_ref","_ref2","_slicedToArray","name","unit","value","match","len","index","formatCountdown","config","_config$format","target","diff","REFRESH_INTERVAL","getTime","countdownProps","_objectSpread","statisticProps","Countdown","defineComponent","initDefaultProps","props","emit","slots","countdownId","ref","statistic","syncTimer","timestamp","startTimer","stopTimer","formatCD","valueRenderHtml","node","onMounted","onUpdated","onBeforeUnmount","_createVNode","Statistic","omit","app"],"mappings":"wLA4BA,SAASA,EAASC,EAAQC,EAAQC,EAAO,CACvCF,EAASG,EAASH,CAAM,EACxBC,EAASG,EAAUH,CAAM,EAEzB,IAAII,EAAYJ,EAASK,EAAWN,CAAM,EAAI,EAC9C,OAAQC,GAAUI,EAAYJ,EACzBM,EAAcN,EAASI,EAAWH,CAAK,EAAIF,EAC5CA,CACN,CCjCA,IAAIQ,EAAY,CAAC,CAAC,IAAK,IAAO,GAAK,GAAK,GAAK,GAAG,EAAG,CAAC,IAAK,IAAO,GAAK,GAAK,GAAK,EAAE,EAAG,CAAC,IAAK,IAAO,GAAK,GAAK,EAAE,EAAG,CAAC,IAAK,IAAO,GAAK,EAAE,EAAG,CAAC,IAAK,IAAO,EAAE,EAAG,CAAC,IAAK,GAAI,EAAG,CAAC,IAAK,CAAC,CAC7K,EAEO,SAASC,EAAcC,EAAUC,EAAQ,CAC9C,IAAIC,EAAeF,EACfG,EAAc,aACdC,GAAYH,EAAO,MAAME,CAAW,GAAK,CAAE,GAAE,IAAI,SAAUE,EAAK,CAClE,OAAOA,EAAI,MAAM,EAAG,EAAE,CAC1B,CAAG,EACGC,EAAeL,EAAO,QAAQE,EAAa,IAAI,EAC/CI,EAAeT,EAAU,OAAO,SAAUU,EAASC,EAAM,CAC3D,IAAIC,EAAQC,EAAeF,EAAM,CAAC,EAChCG,EAAOF,EAAM,CAAC,EACdG,EAAOH,EAAM,CAAC,EAChB,GAAIF,EAAQ,QAAQI,CAAI,IAAM,GAAI,CAChC,IAAIE,EAAQ,KAAK,MAAMZ,EAAeW,CAAI,EAC1C,OAAAX,GAAgBY,EAAQD,EACjBL,EAAQ,QAAQ,IAAI,OAAO,GAAG,OAAOI,EAAM,GAAG,EAAG,GAAG,EAAG,SAAUG,EAAO,CAC7E,IAAIC,EAAMD,EAAM,OAChB,OAAO1B,EAASyB,EAAM,SAAU,EAAEE,EAAK,GAAG,CAClD,CAAO,EAEH,OAAOR,CACR,EAAEF,CAAY,EACXW,EAAQ,EACZ,OAAOV,EAAa,QAAQJ,EAAa,UAAY,CACnD,IAAIY,EAAQX,EAASa,CAAK,EAC1B,OAAAA,GAAS,EACFF,CACX,CAAG,CACH,CACO,SAASG,EAAgBJ,EAAOK,EAAQ,CAC7C,IAAIC,EAAiBD,EAAO,OAC1BlB,EAASmB,IAAmB,OAAS,GAAKA,EACxCC,EAAS,IAAI,KAAKP,CAAK,EAAE,QAAO,EAChCN,EAAU,KAAK,MACfc,EAAO,KAAK,IAAID,EAASb,EAAS,CAAC,EACvC,OAAOT,EAAcuB,EAAMrB,CAAM,CACnC,CClCA,IAAIsB,EAAmB,IAAO,GAC9B,SAASC,EAAQV,EAAO,CACtB,OAAO,IAAI,KAAKA,CAAK,EAAE,QAAO,CAChC,CACO,IAAIW,EAAiB,UAA0B,CACpD,OAAOC,EAAcA,EAAc,CAAA,EAAIC,EAAgB,CAAA,EAAG,CAAA,EAAI,CAC5D,MAAO,CAAC,OAAQ,OAAQ,MAAM,EAC9B,OAAQ,OACR,SAAU,SACV,SAAU,QACd,CAAG,CACH,EACA,MAAAC,EAAeC,EAAgB,CAC7B,aAAc,CACZ,KAAM,CACP,EACD,KAAM,sBACN,MAAOC,EAAiBL,IAAkB,CACxC,OAAQ,UACZ,CAAG,EAED,MAAO,SAAeM,EAAOtB,EAAM,CACjC,IAAIuB,EAAOvB,EAAK,KACdwB,EAAQxB,EAAK,MACXyB,EAAcC,IACdC,EAAYD,IACZE,EAAY,UAAqB,CACnC,IAAIvB,EAAQiB,EAAM,MACdO,EAAYd,EAAQV,CAAK,EACzBwB,GAAa,KAAK,MACpBC,IAEAC,GAER,EACQD,EAAa,UAAsB,CACrC,GAAI,CAAAL,EAAY,MAChB,KAAII,EAAYd,EAAQO,EAAM,KAAK,EACnCG,EAAY,MAAQ,YAAY,UAAY,CAC1CE,EAAU,MAAM,eACZE,EAAY,KAAK,OACnBN,EAAK,SAAUM,EAAY,KAAK,IAAK,CAAA,EAEvCD,GACD,EAAEd,CAAgB,EACzB,EACQiB,EAAY,UAAqB,CACnC,IAAI1B,EAAQiB,EAAM,MAClB,GAAIG,EAAY,MAAO,CACrB,cAAcA,EAAY,KAAK,EAC/BA,EAAY,MAAQ,OACpB,IAAII,EAAYd,EAAQV,CAAK,EACzBwB,EAAY,KAAK,OACnBN,EAAK,QAAQ,EAGvB,EACQd,EAAkB,SAAyBR,EAAO,CACpD,IAAII,EAAQJ,EAAM,MAChBS,EAAST,EAAM,OACbT,EAAS8B,EAAM,OACnB,OAAOU,EAAS3B,EAAOY,EAAcA,EAAc,GAAIP,CAAM,EAAG,GAAI,CAClE,OAAQlB,CACT,CAAA,CAAC,CACR,EACQyC,EAAkB,SAAyBC,EAAM,CACnD,OAAOA,CACb,EACI,OAAAC,EAAU,UAAY,CACpBP,GACN,CAAK,EACDQ,EAAU,UAAY,CACpBR,GACN,CAAK,EACDS,EAAgB,UAAY,CAC1BN,GACN,CAAK,EACM,UAAY,CACjB,IAAI1B,EAAQiB,EAAM,MAClB,OAAOgB,EAAaC,EAAWtB,EAAc,CAC3C,IAAOU,CACR,EAAEV,EAAcA,EAAc,CAAE,EAAEuB,EAAKlB,EAAO,CAAC,WAAY,UAAU,CAAC,CAAC,EAAG,GAAI,CAC7E,MAAOjB,EACP,YAAa4B,EACb,UAAWxB,CACnB,CAAO,CAAC,EAAGe,CAAK,CAChB,CACG,CACH,CAAC,EC7FDe,EAAU,UAAYpB,EAEtBoB,EAAU,QAAU,SAAUE,EAAK,CACjC,OAAAA,EAAI,UAAUF,EAAU,KAAMA,CAAS,EACvCE,EAAI,UAAUF,EAAU,UAAU,KAAMA,EAAU,SAAS,EACpDE,CACT,EACgCF,EAAU","x_google_ignoreList":[0,1,2,3]}